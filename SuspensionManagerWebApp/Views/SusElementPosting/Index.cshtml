
@model List<SuspensionManagerWebApp.Models.SusElement>

@{
	ViewData["Title"] = "Start";
}

<br />
<br />
<a class="btn btn-primary" asp-controller="SusElementPosting" asp-action="AddEditSusElement">Add suspension element</a>
<hr />
<br />
<table class="table table-striped table-hover">
	<thead>
		<tr>
			<th scope="col">Id</th>
			<th scope="col">Model</th>
			<th scope="col">Manufacturer</th>	
			<th scope="col">Actions</th>
		</tr>
	</thead>
	<tbody>
		@{
			foreach (SusElement susElement in Model)
			{
				<tr>
					<td>@susElement.Id</td>
					<td>@susElement.Model</td>
					<td>@susElement.Manufacturer</td>
					<td>
						<a asp-route-id="@susElement.Id" class="btn btn-info" asp-controller="SusElementPosting" asp-action="ShowSusElement">Show</a>
						<a asp-route-id="@susElement.Id" class="btn btn-warning" asp-controller="SusElementPosting" asp-action="AddEditSusElement">Edit</a>
						<button onclick="onClickedDeleteSusElementButton(@susElement.Id)" class="btn btn-danger">Delete</button>
						@*<a asp-route-id="@susElement.Id" class="btn btn-danger" asp-controller="SusElementPosting" asp-action="DeleteSusElement">Delete</a>	*@ 	
					</td>
				</tr>
			}
		}
	</tbody>
</table>


@section Scripts {

	<script>

		function onClickedDeleteSusElementButton(id) {
			Swal.fire({
				title: "Delete Suspension Element?",
				icon: "warning",
				showCloseButton: true,
				focusConfirm: false,
				confirmButtonText: 'Yes, delete!',
			}).then((result) => {
				if (result.isConfirmed) {
					//BackendCall to delete Setting via ID
					$.ajax({
						type: "POST",
						url: "@Url.Action("DeleteSusElementById")",
						data: { id: id },
						success: function (msg) {
							Swal.fire('Deleted!', '', 'success').then((result) => {
								if (result.isConfirmed) {
									location.reload();
								}
							})
						},
						error: function (msg) {
							Swal.fire('Oops, something went wrong!', '', 'error')
						}
					});

				}
			})
		}

	</script>
}