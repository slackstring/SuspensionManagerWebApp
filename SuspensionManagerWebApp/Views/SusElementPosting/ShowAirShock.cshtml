@model SuspensionManagerWebApp.Models.SusElement

@{
    ViewData["Title"] = "Settings";
}










<div class="container mt-4">
    <div class="row">
        <!-- obere karte übersicht sus-element -->
        <div class="col-md-12">
            <div class="card border-info mb-3">
                <div class="card-header">
                    <h5 class="card-title">Current suspension element:</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <input class="form-control" asp-for="Manufacturer" type="text" readonly />
                        </div>
                        <div class="col-md-2">
                            <input class="form-control" asp-for="Model" type="text" readonly />
                        </div>
                        <div class="col-md-2">
                            <input class="form-control" asp-for="ModelYear" type="text" readonly />
                        </div>
                        <div class="col-md-1">
                            <input class="form-control" asp-for="Length" type="text" readonly />
                        </div>
                        <div class="col-md-1">
                            <input class="form-control" placeholder="x" type="text" readonly />
                        </div>
                        <div class="col-md-1">
                            <input class="form-control" asp-for="Stroke" type="text" readonly />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <hr />
    <br />
    <div class="row">
        <!-- linke karte - Settings Liste -->
        <div class="col-md-3">
            <div class="card border-info mb-3">
                <div class="card-header">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title">
                                Settings
                            </h5>
                        </div>
                        <div class="col">
                            <a class="btn btn-outline-info" onclick="loadPartial(0, @Model.Id)">Add</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="col">
                        @{
                            List<Setting> list = new List<Setting>();
                            foreach (Setting setting in Model.Settings)
                            {
                                list.Add(setting);
                            }
                            for (int i = list.Count - 1; i >= 0; i--)
                            {
                                <div class="row form-group mb-3">
                                    <div class="col">
                                        <a class="btn btn-info" onclick="loadPartial(@list[i].Id, @Model.Id)">@list[i].Date</a>
                                        @* <a class="btn btn-danger" asp-route-id="@list[i].Id" asp-controller="SusElementPosting" asp-action="DeleteSetting">Delete</a> *@
                                        <button onclick="onClickedDeleteSettingButton(@list[i].Id)" class="btn btn-danger">Delete</button>
                                    </div>
                                </div>
                            }

                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- rechte Karte - Setting Anzeige -->
        <div class="col-md-9">
            <div class="card border-info mb-3">
                <div class="card-body">
                    <div id="partialView">
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>


@section Scripts {
    @if (Model.Settings.Count > 0)
    {
        <script>
            function loadPartial(idSetting, idSusElement) {
            if (idSetting !== null) {
            $('#partialView').load("/SusElementPosting/AirShockSetting", { idSetting: idSetting, idSusElement: idSusElement });
            }

            }

            //wenn die HTML View geöffnet ist, wird die funktion loadPartial ausgeführt um das aktuellste Setting anzuzeigen
            $(document).ready(function(){
            trigger();
            });

            function trigger() {
            var settingsCount = @Model.Settings.Count;

            if (settingsCount === 0) {
            console.log("Keine Settings vorhanden!");
            } else {
            console.log("Settings vorhanden!");
            loadPartial(@Model.Settings.Last().Id, @Model.Id);
            }
            }
            
            function onClickedDeleteSettingButton(id)
            {
                Swal.fire({
                    title: "Delete setting?",
                    icon: "warning",
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: 'Yes, delete!',
                }).then((result) => {
                    if (result.isConfirmed) {
                        //BackendCall to delete Setting via ID
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteSettingById")",
                            data: { id: id },
                            success: function (msg) {
                                Swal.fire('Deleted!', '', 'success').then((result) => {
                                    if (result.isConfirmed) {
                                        location.reload();
                                    }
                                })
                            },
                            error: function (msg) {
                                Swal.fire('Oops, something went wrong!', '', 'error')
                            }
                        });

                    }
                })
            }


        </script>
    } 
    else
    {
        <script>
         function loadPartial(idSetting, idSusElement) {
            if (idSetting !== null) {
            $('#partialView').load("/SusElementPosting/AirShockSetting", { idSetting: idSetting, idSusElement: idSusElement });
            }}


            function onClickedDeleteSettingButton(id) {
                Swal.fire({
                    title: "Delete setting?",
                    icon: "warning",
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: 'Yes, delete!',
                }).then((result) => {
                    if (result.isConfirmed) {
                        //BackendCall to delete Setting via ID
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteSettingById")",
                            data: { id: id },
                            success: function (msg) {
                                Swal.fire('Deleted!', '', 'success').then((result) => {
                                    if (result.isConfirmed) {
                                        location.reload();
                                    }
                                })
                            },
                            error: function (msg) {
                                Swal.fire('Oops, something went wrong!', '', 'error')
                            }
                        });

                    }
                })
            }
        </script>
    }
}


      